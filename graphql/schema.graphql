type Query {
  questions(productId: String!): [Question]
    @cacheControl(scope: SEGMENT, maxAge: MEDIUM)
  answers(questionId: ID!): [Answer]
    @cacheControl(scope: SEGMENT, maxAge: MEDIUM)
  search(keyword: String): [Question] @cacheControl(scope: PRIVATE)
  config: Config @cacheControl(scope: PRIVATE)
}

type Votes {
  id: String
  votes: Int
}

type Config {
  schema: Boolean
  title: String
  anonymous: Boolean
  search: Boolean
  maxQuestions: Int
}

type Mutation {
  addQuestion(
    question: String
    name: String
    email: String
    anonymous: Boolean
    allowed: Boolean
    productId: String!
  ): String
  addAnswer(
    questionId: ID
    answer: String
    name: String
    email: String
    anonymous: Boolean
    allowed: Boolean
  ): String
  voteQuestion(email: String, id: ID, vote: Int): Int
  voteAnswer(email: String, id: ID): Int
  moderateQuestion(id: ID, allowed: Boolean): Boolean
  moderateAnswer(id: ID, allowed: Boolean): Boolean
  deleteQuestion(id: ID): Boolean
  deleteAnswer(id: ID): Boolean
}

type Question {
  id: String
  question: String
  name: String
  email: String
  anonymous: Boolean
  answers: [Answer]
  votes: Int
  allowed: Boolean
  productId: String
}

type Answer {
  answer: String
  votes: Int
  questionId: ID
  name: String
  email: String
  anonymous: Boolean
  allowed: Boolean
}
